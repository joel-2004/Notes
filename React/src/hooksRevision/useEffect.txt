useEffect :
useEffect hook is one of the primary hook in react .

It is used to perform side effects in function components.

side effects refers to actions thath happens outside the component such as fetching data from an API , updating the DOM..etc.

This runs only one time during the time of rendering component.

If we wnt to run the function inseide useEffect hook more than once then we can use the dependecy array.

When each time the value in the dependecy array changes the use effect hook runs the function.




Work Case:


As we know, useEffect hook is called only once during the time of rendering a component.For example , we don't always fetch the data from an API,
so the fetching of data from an API should be written inside useEffect hook.

Flow Of UseEffect :

step 1 : Whenever the component is render the function inside the useEffect hook is mounted .

step 2 : When we want to run the function inside useEffect more than once we can done it using dependecy array .

step 3 : Depency Array tell us that whenever the values inside the depency array is changed ( Any one of the value ) then run the useEffect hook .

step 4 : When the useEffect hook is called second time then first it runs the clean up function which will unmount the previous work done by the hook.
After that only it execute the function logic present inside the useEffect hook. (After unMount the previous state , it renders the new state).

step 5 : If we didn't write the cleanup function then the previous state won't be unmounted .So it is good practice to write the cleanUp function .bu it is optional.

step 6 : Initial Render ---> change in value of dependency Array ---> unMount the previous side effect ---> Re render the new side effect.