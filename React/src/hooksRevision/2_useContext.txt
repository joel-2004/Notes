useContext :

useContext hooks avoid the props drilling in the components.

                                                  App
  |

............................................................................................................
|                                                         |                                                |

A  B       C
 |   |
 
 D   E
  |
  F


Suppose if I want to display the userName of the user in the component A , D and F .we share the userName in App component.

To pass the data , we use props.For component D , we need to pass props to D anf for F we need to pass to C and F.

But there is no need for the userName data in component B , C and E.

And imagine , if we have 10 level of components and the components at level 10 needed a data need to show from the app component.Then the props drilling is un imaginable.

To avoid that we use useContext hook , the purpose of the hook is we can directly send props / state to any components without prop drilling.



STEPS IN CREATING AND USING CONTEXT API

step 1 : create a context by using createContext()

step 2 : Wrap the components that need to share the data within the provider component.

step 3 : Which are the components that are wrapped inside the provider need to import the providers as well as the useContext hook.

step 4 : pass the context into the useCotext hook that will return the data provided in the props as Object.
